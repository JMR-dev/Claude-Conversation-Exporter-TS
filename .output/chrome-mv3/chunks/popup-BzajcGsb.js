(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))c(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&c(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function c(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();try{}catch(n){console.error("[wxt] Failed to initialize plugins",n)}const p=globalThis.browser?.runtime?.id?globalThis.browser:globalThis.chrome,u=p;async function f(){return(await u.storage.sync.get(["organizationId"])).organizationId}async function g(){const e=(await u.tabs.query({active:!0,currentWindow:!0}))[0];if(!e?.url)return null;const t=new URL(e.url);return/\/chat\/([a-f0-9-]+)/.exec(t.pathname)?.[1]??null}function l(n,e="info"){const t=document.getElementById("status");t&&(t.className=`status ${e}`,t.textContent=n,e==="success"&&setTimeout(()=>{t.textContent="",t.className=""},3e3))}function i(n){return document.getElementById(n)}async function w(){if(!await f()){const e=i("setupNotice");e&&(e.style.display="block");const t=i("exportCurrent"),c=i("exportAll");t&&(t.disabled=!0),c&&(c.disabled=!0)}}function h(){i("openOptions")?.addEventListener("click",e=>{e.preventDefault(),u.runtime.openOptionsPage()})}async function m(){const n=i("exportCurrent");if(n){n.disabled=!0,l("Fetching conversation...","info");try{const e=await f(),t=await g();if(!e)throw new Error("Organization ID not configured. Click the setup link above to configure it.");if(!t)throw new Error("Could not detect a conversation ID. Make sure you are on a Claude.ai conversation page.");const r=(await u.tabs.query({active:!0,currentWindow:!0}))[0];if(!r?.url?.includes("claude.ai"))throw new Error("Please navigate to a Claude.ai conversation page first.");if(!r.id)throw new Error("Could not identify active tab.");const s=i("format"),o=i("includeMetadata");try{const a=await u.tabs.sendMessage(r.id,{action:"exportConversation",conversationId:t,orgId:e,format:s?.value??"json",includeMetadata:o?.checked??!0});if(a?.success)l("Conversation exported successfully!","success");else{const d=a?.error??"Export failed";console.error("Export failed:",d,a?.details),l(d,"error")}}catch(a){const d=a instanceof Error?a.message:String(a);throw d.includes("connection")||d.includes("Receiving end")?new Error("Cannot connect to page. Please ensure you are on a Claude.ai conversation page (https://claude.ai/chat/...) and refresh if needed."):a}}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";l(t,"error")}finally{n.disabled=!1}}}function b(){u.tabs.create({url:u.runtime.getURL("browse.html")})}async function v(){const n=i("exportAll");if(n){n.disabled=!0,l("Fetching all conversations...","info");try{const e=await f();if(!e)throw new Error("Organization ID not configured. Click the setup link above to configure it.");const c=(await u.tabs.query({active:!0,currentWindow:!0}))[0];if(!c?.url?.includes("claude.ai"))throw new Error('Please navigate to a Claude.ai page first, or use "Browse All Conversations" instead.');if(!c.id)throw new Error("Could not identify active tab.");const r=i("format"),s=i("includeMetadata");try{const o=await u.tabs.sendMessage(c.id,{action:"exportAllConversations",orgId:e,format:r?.value??"json",includeMetadata:s?.checked??!0});if(o?.success)o.warnings?l(o.warnings,"info"):l(`Exported ${o.count??0} conversations!`,"success");else{const a=o?.error??"Export failed";console.error("Export failed:",a,o?.details),l(a,"error")}}catch(o){const a=o instanceof Error?o.message:String(o);throw a.includes("connection")||a.includes("Receiving end")?new Error('Cannot connect to page. This feature requires a Claude.ai page (https://claude.ai/chat/... or similar). Try "Browse All Conversations" instead - it works from any tab.'):o}}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";l(t,"error")}finally{n.disabled=!1}}}document.addEventListener("DOMContentLoaded",()=>{w(),h();const n=i("exportCurrent"),e=i("browseConversations"),t=i("exportAll");n?.addEventListener("click",()=>void m()),e?.addEventListener("click",b),t?.addEventListener("click",()=>void v())});
